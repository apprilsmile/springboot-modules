package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import com.appril.utils.ApiResult;
import com.appril.utils.HuToolUtils;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.Date;


@RestController
@RequestMapping("/${table.entityPath}")
public class ${entity}Controller {
    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
     * 保存、修改 【区分id即可】
     * @param ${table.entityPath} 传递的实体
     * @return ApiResult转换结果
     */
    @PostMapping("/save")
    public ApiResult save(@RequestBody ${entity} ${table.entityPath}) {
        try {
            if (${table.entityPath}.getId() != null){
                ${table.entityPath}.setMdfTm(new Date());
                    ${table.entityPath}Service.updateById(${table.entityPath});
            }else{
                Date now = new Date();
                ${table.entityPath}.setId(HuToolUtils.getId());
                ${table.entityPath}.setCrtTm(now);
                ${table.entityPath}.setMdfTm(now);
                ${table.entityPath}.setIsDel(0);
                ${table.entityPath}.setIsValid(0);
                    ${table.entityPath}Service.save(${table.entityPath});
            }
            return ApiResult.isOkMessage("保存成功");
        } catch (Exception e) {
            e.printStackTrace();
            return ApiResult.isErrMessage("保存对象失败！" + e.getMessage());
        }
    }

    //删除对象信息
    @PostMapping("/{id}")
    public ApiResult delete(@PathVariable("id") Long id) {
        try {
            ${table.entityPath}Service.removeById(id);
            /*${entity} ${table.entityPath} = new ${entity}();
            ${table.entityPath}.setId(id);
            ${table.entityPath}.setIsDel(1);
             ${table.entityPath}Service.updateById(${table.entityPath});*/
            return ApiResult.isOkMessage("删除成功");
        } catch (Exception e) {
            e.printStackTrace();
            return ApiResult.isErrMessage("删除对象失败！" + e.getMessage());
        }
    }

    //获取
    @GetMapping("/{id}")
    public ApiResult get(@PathVariable("id") Long id) {

        return ApiResult.isOkNoToken("查询成功", ${table.entityPath}Service.getById(id));
    }


    //查看
    @GetMapping("/list")
    public ApiResult list(@RequestBody ${entity} ${table.entityPath}) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        return ApiResult.isOkNoToken("查询成功", ${table.entityPath}Service.list(queryWrapper));
    }


    //分页查看
    @GetMapping("/pageList")
    public ApiResult pageList(@RequestBody ${entity} ${table.entityPath}) {
        Page<${entity}> userPage = new Page<>(1,10);
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
        Page<${entity}> page = ${table.entityPath}Service.page(userPage, queryWrapper);
        return ApiResult.isOkNoToken("查询成功",page);
    }
}